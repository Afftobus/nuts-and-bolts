Мы всегда стараемся делать НаБ так, что бы сервис не скомпилировался без необходимых правок,
но иногда нужно внести какие-то изменения, которые не проверишь компиляцией и/или юнит-тестами.
Эти "нюансы", на которые следует обратить внимание, собраны по возможности тут.
Но и полное следование этим заметкам ничего не гарантирует, будьте внимательны!
Если обнаружите, что Вам пришлось что-то сделать не описанное тут - добавьте.

[SNAPSHOT]
Версия jdbc драйвера обновлена до 42.1.4, можно забыть про ограничения с setFetchSize.
Удалён GuicyHibernateLoader. Он инжектил поля в хибер-сущности. Проверьте, что в ваших Hibernate энтитях ничего не injectиться, это криво.
Удалена задепрекейченый атрибут optional у аннотации Transactional, используйте readOnly.

[2.1.0]
Добавлен timeout на statement в базу. Чтобы его включить, нужно добавить
  default-db.statementTimeoutMs=...

Переименованы 3 настройки. Необходимо убрать "c3p0" из названий настроек jdbcUrl, user, password, т.е.
  default-db.c3p0.jdbcUrl
  default-db.c3p0.user
  default-db.c3p0.password
    ->
  default-db.jdbcUrl
  default-db.user
  default-db.password
для каждого дата-сурса (не только default-db)

XXX.c3p0.driverClass рекомендуется убрать. Современные драйверы вполне выводятся из префикса jdbc урла, так что явное указание не требуется.
Зато, чтобы вкрячить log4jdbc достаточно изменять jdbc урл, а не менять еще и драйвер.

[2.0.2]
Чистка неиспользуемого нигде кода:
  -утильные классы, cvs-билдер, деревья и т.д.
  -пакет security
  -древний хистограм-мониторинг
  -аннотация Cached
  -CallbackWithRequestScope и ThreadLocalScope

[2.0.1]
jdebug работает в набе из коробки, если jdebug был добавлен в сервисе самостоятельно, следует убрать его.

[2.0.0]
1.Работа с базой уехала в отдельный мавен модуль.
1.1.Если нужно, то подключать так
  <groupId>ru.hh.nab</groupId>
  <artifactId>nab-hibernate</artifactId>
  Версию не обязательно с корным набом синхронизировать.

1.2.Инициализация Хибера
1.2.1.
  bindDataSourceAndEntityManagerAccessor(Entity.class,...
  меняется на
  install(new HibernateModule(Entity.class,...
1.2.2.
  bindDataSourceAndEntityManagerAccessor("ro-db", ReadOnly.class, Entity.class,...
  меняется на
  install(new HibernateModule("ro-db", ReadOnly.class, Entity.class,...
1.2.3. если нужно переопределить configureEjb3Configuration, то в MyServiceHibernateModule extends HibernateModule можно сделать.

2.Версию postgresql драйвера желательно проверить, какая подтягивается в проекте. В НаБе 42.1.3. Может перекрыться. Если так, то явно прописать.
2.1.в jdbc url, везде, где есть "prepareThreshold=0" добавить и "preparedStatementCacheQueries=0",
  если prepareThreshold>=0, то preparedStatementCacheQueries можно оставить дефолтным или выставить по вкусу.
2.2.из-за баги в jdbc драйвере, нужно проверить все вызовы setFetchSize.
  Нужно их избежать как-то, или пропустить этот релиз наба до следующего с версией jdbc драйвера >= 42.1.4
2.3.Рекомендуется перейти на prepared statement в jdbc драйвере, вместо c3p0

3.зависимость от freemarker и jackson стала официально optional. Если в проекте они используются, то нужно прописать в pom.xml

4.Guice 4.0 -> 4.1.0

5.@Transactional не работает на теле метода в Callable, переданного в GuicyAsyncExecutor

[1.8.16]
Удалена фича из 1.7.11 "ability to create a SessionManager"

[1.8.15]
Перед стартом сервиса (в самом начале), проверяется доступность базы.

[1.8.14]
Правки не требуются.

[1.8.13]
В настройках новая обязательная строчка
serviceName=<serviceName>
Нужно вписать уникальное имя своего сервиса. Используется, например, как префикс для метрик работы с базой.

[1.8.12]
Чуть вырезали из стектрейса в мониторинге соединений с базой

[1.8.11]
обновлена библиотека работы с метриками

[1.8.10]
В мониторинге использования соединений с базом поправлена работа с персентилями.

[1.8.9]
В мониторинг использования соединений с базом добавлен стектрейс.

[1.8.8]
Обновлена библиотека работы с метриками.

[1.8.7]
В аннотации Transactional задепрекейчен optional, вместо него нужно писать readOnly.
Смысл двух параметров одинаковый, логика обработки в релизе не менялась.
Если хоть один параметр в true, то оставляем "readOnly=true", иначе просто удалить параметры.

[1.8.6]
Read-only транзакции больше не создаются. Все рид-онли запросы (в мастер и на реплику) по отдельности, без транзакций.
В аннотации Transactional два параметра optional и readOnly об одном и том же. Достаточного любого в true.

[1.8.5]
По мотивам 1.8.0, только теперь пробел никогда не добавляется в тело ответа (раньше только для 204-го кода было отключено).
По идеи, новых превращений кодов ответа не ожидается, но вызовы в джавских клиентах на ожидание тела в ответе нужно проверить.

[1.8.4]
Пустой релиз. Правки не требуются.

[1.8.2]
Добавился мониторинг использования соединений до Базы. Если не интересует, то просто добавить настройку на каждый DataSource, типа:
default-db.monitoring.sendStats=false
ro-db.monitoring.sendStats=false

[1.8.1]
Добавили fail-fast - отпинывать запросы, которые уже наверняка не обработать.

[1.8.0]
Если возвращать из ресурса null (void) и 204-ый код ответа, то она превращалась в 200 ответ с пробелом в теле.
Теперь, если это 204, то превращения не происходит и пробел не добавляется.
Проверить, что все, кто ожидает 200, в этих случаях ждёт и 204.
А джава клиенты не вызывают методы вида .get(String.class), нужно дёргать просто .get(). Иначе упадёт.
Unit тесты это покрывают, если в них вызов клиента с этой строчкой есть.

[1.7.13]
Правки не требуются.

[1.7.12]
Сделан graceful shutdown.

[1.7.11]
Добавлена непонятная фича "ability to create a SessionManager", выпилена в 1.8.16.

[1.7.10]
Guice с 3 на 4 перешли.

[1.7.9]
Пустой релиз. Правки не требуются.

[1.7.8]
Обновили библиотеку таймингов.

[1.7.7]
Правки не требуются.

[1.7.6]
Перестали ставить HTTP header X-Accel-Buffering.

[1.7.5]
Удалены остатки Grizzly и TimedAsync.

[1.7.4]
Правки не требуются.

[1.7.3]
Правки не требуются.
